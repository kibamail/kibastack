---

- name: ensure required packages are installed
  apt:
    name:
      - git
      - rsync
    state: present
    update_cache: yes
  become: true

- name: ensure pm2 is installed globally
  npm:
    name: pm2
    global: yes
    state: present
  become: true

- name: set deployment timestamp
  set_fact:
    timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
    deployment_path: "{{ deployments_dir }}/{{ deployment_prefix }}{{ deploy_tag }}"

- name: ensure deployment directories exist
  file:
    path: "{{ deployments_dir }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755
  become: true

- name: check if deployment directory already exists
  stat:
    path: "{{ deployment_path }}"
  register: deployment_dir_stat

- name: check if current symlink exists
  stat:
    path: "{{ current_symlink }}"
  register: current_symlink_stat
  when: deployment_dir_stat.stat.exists

- name: get current deployment path
  shell: "readlink {{ current_symlink }}"
  register: current_deployment_path
  changed_when: false
  failed_when: false
  when: deployment_dir_stat.stat.exists and current_symlink_stat.stat.exists and current_symlink_stat.stat.islnk

- name: fail if deployment is already the current deployment
  fail:
    msg: "deployment {{ deployment_path }} is already the current deployment. cannot redeploy the same tag that is currently live."
  when: >
    deployment_dir_stat.stat.exists and
    current_symlink_stat.stat.exists and
    current_symlink_stat.stat.islnk and
    current_deployment_path.stdout == deployment_path

- name: remove existing deployment directory if not current
  file:
    path: "{{ deployment_path }}"
    state: absent
  become: true
  when: >
    deployment_dir_stat.stat.exists and
    (not current_symlink_stat.stat.exists or
     not current_symlink_stat.stat.islnk or
     current_deployment_path.stdout != deployment_path)

- name: create deployment directory
  file:
    path: "{{ deployment_path }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755
  become: true

- name: clone repository
  include_tasks: clone.yml

- name: build application
  include_tasks: build.yml

- name: update symlinks
  include_tasks: symlink.yml

- name: find old deployments
  find:
    paths: "{{ deployments_dir }}"
    patterns: "{{ deployment_prefix }}*"
    file_type: directory
  register: old_deployments

- name: sort deployments by creation time
  set_fact:
    sorted_deployments: "{{ old_deployments.files | sort(attribute='mtime') }}"

- name: remove old deployments
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ sorted_deployments[:-keep_releases] }}"
  when: sorted_deployments | length > keep_releases
  become: true

- name: display deployment information
  debug:
    msg:
      - "deployment completed successfully"
      - "tag: {{ deploy_tag }}"
      - "path: {{ deployment_path }}"
      - "current symlink: {{ current_symlink }}"
