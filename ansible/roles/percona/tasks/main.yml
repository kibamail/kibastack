---
- name: check if percona xtrabackup is already installed
  command: dpkg-query -W percona-xtrabackup-80
  register: xtrabackup_check
  failed_when: false
  changed_when: false

- name: update apt cache
  apt:
    update_cache: yes
  when: xtrabackup_check.rc != 0

- name: install curl
  apt:
    name: curl
    state: present
  when: xtrabackup_check.rc != 0

- name: download percona-release package
  get_url:
    url: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
    dest: /tmp/percona-release_latest.generic_all.deb
  when: xtrabackup_check.rc != 0

- name: install percona-release package and dependencies
  apt:
    deb: /tmp/percona-release_latest.generic_all.deb
    state: present
  when: xtrabackup_check.rc != 0

- name: refresh apt cache after adding repository
  apt:
    update_cache: yes
  when: xtrabackup_check.rc != 0

- name: enable percona xtrabackup 8.0 repository
  command: percona-release setup pxb-80
  when: xtrabackup_check.rc != 0

- name: install percona xtrabackup
  apt:
    name: percona-xtrabackup-80
    state: present
    update_cache: yes
  when: xtrabackup_check.rc != 0

- name: install optional compression packages
  apt:
    name:
      - lz4
      - zstd
    state: present
  when: xtrabackup_check.rc != 0

- name: create backup user with full privileges
  mysql_user:
    name: percona
    host: localhost
    password: "{{ vault_mysql_xtra_backup_password }}"
    priv: "*.*:ALL,GRANT"
    state: present
  when: xtrabackup_check.rc != 0 or percona_force_user_update | default(false)

- name: create backup directory
  file:
    path: "{{ percona_backup_dir | default('/var/backups/mysql/percona') }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0750
  when: xtrabackup_check.rc != 0

- name: create backup log directory
  file:
    path: "{{ percona_backup_log_dir | default('/var/log/mysql/percona') }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0750
  when: xtrabackup_check.rc != 0

- name: create backup configuration
  template:
    src: backup.cnf.j2
    dest: /etc/mysql/backup.cnf
    owner: root
    group: root
    mode: 0644
  when: xtrabackup_check.rc != 0 or percona_force_config_update | default(false)

- name: check percona xtrabackup version
  command: xtrabackup --version
  register: xtrabackup_version
  changed_when: false
  failed_when: false

- name: display percona xtrabackup version
  debug:
    msg: "percona xtrabackup version: {{ xtrabackup_version.stdout | default('Not installed') }}"
